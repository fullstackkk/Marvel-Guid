{"version":3,"sources":["services/MarvelService.js","hooks/http.hook.js","components/spinner/Spinner.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/pages/MainPage.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/comicsList/ComicsList.js","components/pages/Comics.js","components/appHeader/AppHeader.js","components/app/App.js","index.js"],"names":["useMarvelService","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","fetch","response","ok","Error","status","data","json","message","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacter","id","getAllComics","_transformComics","char","name","description","thumbnail","path","extension","homepage","urls","wiki","comics","items","title","pageCount","price","prices","Spinner","xmlns","style","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorMessage","heigth","objectFit","src","img","alt","View","clazzImg","includes","length","slice","className","href","RandomChar","setChar","useEffect","updateChar","timerId","setInterval","clearInterval","onCharLoaded","Math","floor","random","then","errorMassage","spiner","content","onClick","mjolnir","CharList","props","charList","setCharList","newItemLoading","setNewItemLoading","setOffset","charEnded","setCharEnded","onRequest","initial","onCharListLoaded","newCharList","ended","itemRefs","useRef","focusOnItem","current","forEach","item","classList","remove","add","focus","arr","i","imgStyle","tabIndex","ref","el","onCharSelected","onKeyPress","e","key","renderItems","errorMessage","spinner","disabled","Skeleton","decoration","CharInfo","charId","skeleton","ErrorBoundary","state","errorInfo","console","log","this","setState","children","Component","MainPage","selectedChar","AppBanner","avengers","avengersLogo","ComicsList","comicsList","setComicsList","comicsEnded","setComicsEnded","newComicsList","ComicsPage","AppHeader","to","exact","activeStyle","App","Comics","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mWAkDeA,EAhDU,WAErB,MCFmB,WACnB,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA0BF,mBAAS,MAAnC,mBAAOG,EAAP,KAAcC,EAAd,KA4BA,MAAO,CAAEH,UAASI,QA1BFC,sBAAW,uCAAC,WAAOC,GAAP,mCAAAC,EAAA,6DAAYC,EAAZ,+BAAqB,MAAOC,EAA5B,+BAAmC,KAC3DC,EADwB,+BACd,CAAE,eAAgB,oBAE5BT,GAAW,GAHa,kBAMGU,MAAML,EAAK,CAAEE,SAAQC,OAAMC,YAN9B,WAMdE,EANc,QAQNC,GARM,uBASV,IAAIC,MAAJ,0BAA6BR,EAA7B,oBAA4CM,EAASG,SAT3C,eAYdC,EAAOJ,EAASK,OAEtBhB,GAAW,GAdS,kBAebe,GAfa,wCAiBpBf,GAAW,GACXE,EAAS,KAAEe,SAlBS,+DAAD,sDAsBxB,IAIwBhB,QAAOiB,WAFfd,uBAAY,kBAAMF,EAAS,QAAO,KD1BLiB,GAAxCpB,EAAR,EAAQA,QAASI,EAAjB,EAAiBA,QAASF,EAA1B,EAA0BA,MAAOiB,EAAjC,EAAiCA,WAE3BE,EAAW,4CACXC,EAAU,0CAKVC,EAAgB,uCAAG,0CAAAhB,EAAA,6DAAOiB,EAAP,+BAJL,IAIK,SACHpB,EAAQ,GAAD,OAAIiB,EAAJ,qCAAyCG,EAAzC,YAAmDF,IADvD,cACfG,EADe,yBAEdA,EAAIT,KAAKU,QAAQC,IAAIC,IAFP,2CAAH,qDAIhBC,EAAY,uCAAG,WAAOC,GAAP,eAAAvB,EAAA,sEACCH,EAAQ,GAAD,OAAIiB,EAAJ,sBAA0BS,EAA1B,YAAgCR,IADxC,cACXG,EADW,yBAEVG,EAAoBH,EAAIT,KAAKU,QAAQ,KAF3B,2CAAH,sDAKZK,EAAY,uCAAG,0CAAAxB,EAAA,6DAAOiB,EAAP,+BAAgB,EAAhB,SACCpB,EAAQ,GAAD,OAAIiB,EAAJ,qDAAyDG,EAAzD,YAAmEF,IAD3E,cACXG,EADW,yBAEVA,EAAIT,KAAKU,QAAQC,IAAIK,IAFX,2CAAH,qDAKZJ,EAAsB,SAACK,GACzB,MAAO,CACHH,GAAIG,EAAKH,GACTI,KAAMD,EAAKC,KACXC,YAAaF,EAAKE,YAClBC,UAAWH,EAAKG,UAAUC,KAAO,IAAMJ,EAAKG,UAAUE,UACtDC,SAAUN,EAAKO,KAAK,GAAGlC,IACvBmC,KAAMR,EAAKO,KAAK,GAAGlC,IACnBoC,OAAQT,EAAKS,OAAOC,QAGtBX,EAAmB,SAACU,GACtB,MAAO,CACHZ,GAAIY,EAAOZ,GACXI,KAAMQ,EAAOE,MACbT,YAAaO,EAAOP,aAAe,0BACnCC,UAAWM,EAAON,UAAUC,KAAO,IAAMK,EAAON,UAAUE,UAC1DO,UAAWH,EAAOG,UAAP,UAAsBH,EAAOG,UAA7B,OAA8C,2CACzDC,MAAOJ,EAAOK,OAAOD,MAAd,UAAyBJ,EAAOK,OAAOD,MAAvC,KAAkD,kBAGjE,MAAO,CAAE9C,UAASE,QAAOiB,aAAYI,mBAAkBM,eAAcE,iB,OEiB1DiB,EAhEC,WACZ,OACI,sBAAKC,MAAM,6BAA6BC,MAAO,CAAEC,OAAQ,SAAUC,WAAY,OAAQC,QAAS,SAAWC,MAAM,QAAQC,OAAO,QAAQC,QAAQ,cAAcC,oBAAoB,WAAlL,UACI,mBAAGC,UAAU,mBAAb,SACI,mBAAGA,UAAU,YAAb,SACI,yBAAQC,GAAG,IAAIC,GAAG,IAAIC,EAAE,IAAIC,KAAK,UAAUC,YAAY,IAAvD,UACI,kCAAkBC,cAAc,YAAYC,KAAK,QAAQC,MAAM,UAAUC,OAAO,cAAcC,SAAS,MAAMC,IAAI,KAAKC,YAAY,eAClI,yBAASN,cAAc,cAAcI,SAAS,MAAMC,IAAI,KAAKC,YAAY,aAAaH,OAAO,MAAMD,MAAM,mBAGjH,mBAAGR,UAAU,iDAAb,SACA,mBAAGA,UAAU,aAAb,SACI,yBAAQC,GAAG,IAAIC,GAAG,IAAIC,EAAE,IAAIC,KAAK,UAAUC,YAAY,QAAvD,UACI,kCAAkBC,cAAc,YAAYC,KAAK,QAAQC,MAAM,SAASC,OAAO,cAAcC,SAAS,MAAMC,IAAI,KAAKC,YAAY,eACjI,yBAASN,cAAc,cAAcI,SAAS,MAAMC,IAAI,KAAKC,YAAY,aAAaH,OAAO,MAAMD,MAAM,kBAGjH,mBAAGR,UAAU,mBAAb,SACA,mBAAGA,UAAU,aAAb,SACI,yBAAQC,GAAG,IAAIC,GAAG,IAAIC,EAAE,IAAIC,KAAK,UAAUC,YAAY,OAAvD,UACI,kCAAkBC,cAAc,YAAYC,KAAK,QAAQC,MAAM,UAAUC,OAAO,cAAcC,SAAS,MAAMC,IAAI,KAAKC,YAAY,eAClI,yBAASN,cAAc,cAAcI,SAAS,MAAMC,IAAI,KAAKC,YAAY,aAAaH,OAAO,MAAMD,MAAM,mBAGjH,mBAAGR,UAAU,kDAAb,SACA,mBAAGA,UAAU,cAAb,SACI,yBAAQC,GAAG,IAAIC,GAAG,IAAIC,EAAE,IAAIC,KAAK,UAAUC,YAAY,QAAvD,UACI,kCAAkBC,cAAc,YAAYC,KAAK,QAAQC,MAAM,QAAQC,OAAO,cAAcC,SAAS,MAAMC,IAAI,KAAKC,YAAY,eAChI,yBAASN,cAAc,cAAcI,SAAS,MAAMC,IAAI,KAAKC,YAAY,aAAaH,OAAO,MAAMD,MAAM,iBAGjH,mBAAGR,UAAU,kCAAb,SACA,mBAAGA,UAAU,cAAb,SACI,yBAAQC,GAAG,IAAIC,GAAG,IAAIC,EAAE,IAAIC,KAAK,UAAUC,YAAY,MAAvD,UACI,kCAAkBC,cAAc,YAAYC,KAAK,QAAQC,MAAM,UAAUC,OAAO,cAAcC,SAAS,MAAMC,IAAI,KAAKC,YAAY,eAClI,yBAASN,cAAc,cAAcI,SAAS,MAAMC,IAAI,KAAKC,YAAY,aAAaH,OAAO,MAAMD,MAAM,mBAGjH,mBAAGR,UAAU,kDAAb,SACA,mBAAGA,UAAU,cAAb,SACI,yBAAQC,GAAG,IAAIC,GAAG,IAAIC,EAAE,IAAIC,KAAK,UAAUC,YAAY,QAAvD,UACI,kCAAkBC,cAAc,YAAYC,KAAK,QAAQC,MAAM,SAASC,OAAO,cAAcC,SAAS,MAAMC,IAAI,KAAKC,YAAY,eACjI,yBAASN,cAAc,cAAcI,SAAS,MAAMC,IAAI,KAAKC,YAAY,aAAaH,OAAO,MAAMD,MAAM,kBAGjH,mBAAGR,UAAU,kCAAb,SACA,mBAAGA,UAAU,cAAb,SACI,yBAAQC,GAAG,IAAIC,GAAG,IAAIC,EAAE,IAAIC,KAAK,UAAUC,YAAY,OAAvD,UACI,kCAAkBC,cAAc,YAAYC,KAAK,QAAQC,MAAM,UAAUC,OAAO,cAAcC,SAAS,MAAMC,IAAI,KAAKC,YAAY,eAClI,yBAASN,cAAc,cAAcI,SAAS,MAAMC,IAAI,KAAKC,YAAY,aAAaH,OAAO,MAAMD,MAAM,mBAGjH,mBAAGR,UAAU,iDAAb,SACA,mBAAGA,UAAU,cAAb,SACI,yBAAQC,GAAG,IAAIC,GAAG,IAAIC,EAAE,IAAIC,KAAK,UAAUC,YAAY,QAAvD,UACI,kCAAkBC,cAAc,YAAYC,KAAK,QAAQC,MAAM,KAAKC,OAAO,cAAcC,SAAS,MAAMC,IAAI,KAAKC,YAAY,eAC7H,yBAASN,cAAc,cAAcI,SAAS,MAAMC,IAAI,KAAKC,YAAY,aAAaH,OAAO,MAAMD,MAAM,kBCxDlH,MAA0B,kCCe1BK,EAbM,WACjB,OACI,qBAAKrB,MAAO,CACRG,QAAS,QACTC,MAAO,QACPkB,OAAQ,QACRC,UAAW,UACXtB,OAAQ,UAERuB,IAAKC,EAAKC,IAAI,WCXX,G,MAAA,IAA0B,qCC4DnCC,EAAO,SAAC,GAAc,IAAZ5C,EAAW,EAAXA,KACJC,EAAoCD,EAApCC,KAAME,EAA8BH,EAA9BG,UAAWG,EAAmBN,EAAnBM,SAAUE,EAASR,EAATQ,KAC7BN,EAAgBF,EAAhBE,YACF2C,EAAW1C,EAAU2C,SAAS,uBAAyB,6CAA+C,kBAO1G,OANK5C,IACDA,EAAc,kCAEdA,EAAY6C,OAAS,KACrB7C,EAAcA,EAAY8C,MAAM,EAAG,IAArB,OAGd,sBAAKC,UAAU,oBAAf,UACI,qBAAKR,IAAKtC,EAAWwC,IAAI,mBAAmBM,UAAWJ,IACvD,sBAAKI,UAAU,mBAAf,UACI,mBAAGA,UAAU,mBAAb,SAAiChD,IACjC,mBAAGgD,UAAU,oBAAb,SAAkC/C,IAClC,sBAAK+C,UAAU,mBAAf,UACI,mBAAGC,KAAM5C,EAAU2C,UAAU,sBAA7B,SACI,qBAAKA,UAAU,QAAf,wBAEJ,mBAAGC,KAAM1C,EAAMyC,UAAU,2BAAzB,SACI,qBAAKA,UAAU,QAAf,8BAQTE,EAjFI,WAEf,MAAwBrF,mBAAS,MAAjC,mBAAOkC,EAAP,KAAaoD,EAAb,KACA,EAAqDvF,IAA7CE,EAAR,EAAQA,QAASE,EAAjB,EAAiBA,MAAO2B,EAAxB,EAAwBA,aAAcV,EAAtC,EAAsCA,WAEtCmE,qBAAU,WACNC,IACA,IAAMC,EAAUC,YAAYF,EAAY,KAExC,OAAO,WACHG,cAAcF,MAEnB,IAEH,IAAMG,EAAe,SAAC1D,GAClBoD,EAAQpD,IAGNsD,EAAa,WACfpE,IACA,IAAMW,EAAK8D,KAAKC,MAAM,IAAAD,KAAKE,SAAiC,QAC5DjE,EAAaC,GACRiE,KAAKJ,IAGRK,EAAe9F,EAAQ,cAAC,EAAD,IAAmB,KAC1C+F,EAASjG,EAAU,cAAC,EAAD,IAAc,KACjCkG,EAAYlG,GAAWE,IAAU+B,EAA+B,KAAvB,cAAC,EAAD,CAAMA,KAAMA,IAE3D,OACI,sBAAKiD,UAAU,aAAf,UACKc,EACAC,EACAC,EACD,sBAAKhB,UAAU,qBAAf,UACI,oBAAGA,UAAU,oBAAb,wCAC+B,uBAD/B,4CAIA,mBAAGA,UAAU,oBAAb,mCAGA,wBAAQiB,QAASZ,EAAYL,UAAU,sBAAvC,SACI,qBAAKA,UAAU,QAAf,sBAEJ,qBAAKR,IAAK0B,EAASxB,IAAI,UAAUM,UAAU,kC,QCyD5CmB,G,MAtGE,SAACC,GAEd,MAAgCvG,mBAAS,IAAzC,mBAAOwG,EAAP,KAAiBC,EAAjB,KACA,EAA4CzG,oBAAS,GAArD,mBAAO0G,EAAP,KAAuBC,EAAvB,KACA,EAA4B3G,mBAAS,KAArC,mBAAOyB,EAAP,KAAemF,EAAf,KACA,EAAkC5G,oBAAS,GAA3C,mBAAO6G,EAAP,KAAkBC,EAAlB,KAEA,EAA6C/G,IAArCE,EAAR,EAAQA,QAASE,EAAjB,EAAiBA,MAAOqB,EAAxB,EAAwBA,iBAExB+D,qBAAU,WACNwB,EAAUtF,GAAQ,KACnB,IAEH,IAAMsF,EAAY,SAACtF,EAAQuF,GACbL,GAAVK,GACAxF,EAAiBC,GACZuE,KAAKiB,IAGRA,EAAmB,SAACC,GACtB,IAAIC,GAAQ,EACRD,EAAYjC,OAAS,IACrBkC,GAAQ,GAGZV,GAAY,SAAAD,GAAQ,4BAAQA,GAAR,YAAqBU,OACzCP,GAAkB,SAAAD,GAAc,OAAI,KACpCE,GAAU,SAAAnF,GAAM,OAAIA,EAAS,KAC7BqF,GAAa,SAAAD,GAAS,OAAIM,MAGxBC,EAAWC,iBAAO,IAElBC,EAAc,SAACvF,GACjBqF,EAASG,QAAQC,SAAQ,SAAAC,GAAI,OAAIA,EAAKC,UAAUC,OAAO,0BACvDP,EAASG,QAAQxF,GAAI2F,UAAUE,IAAI,uBACnCR,EAASG,QAAQxF,GAAI8F,SAyCzB,IAAMjF,EApCN,SAAqBkF,GACjB,IAAMlF,EAAQkF,EAAIlG,KAAI,SAAC6F,EAAMM,GACzB,IAAIC,EAAW,CAAE,UAAa,SAK9B,MAJuB,wEAAnBP,EAAKpF,YACL2F,EAAW,CAAE,UAAa,UAI1B,qBACI7C,UAAU,aACV8C,SAAU,EACVC,IAAK,SAAAC,GAAE,OAAIf,EAASG,QAAQQ,GAAKI,GAEjC/B,QAAS,WACLG,EAAM6B,eAAeX,EAAK1F,IAC1BuF,EAAYS,IAEhBM,WAAY,SAACC,GACK,MAAVA,EAAEC,KAAyB,UAAVD,EAAEC,MACnBhC,EAAM6B,eAAeX,EAAK1F,IAC1BuF,EAAYS,KAZxB,UAeI,qBAAKpD,IAAK8C,EAAKpF,UAAWwC,IAAK4C,EAAKtF,KAAMgB,MAAO6E,IACjD,qBAAK7C,UAAU,aAAf,SAA6BsC,EAAKtF,SAZ7BsF,EAAK1F,OAiBtB,OACI,oBAAIoD,UAAU,aAAd,SACKvC,IAKC4F,CAAYhC,GAEpBiC,EAAetI,EAAQ,cAAC,EAAD,IAAmB,KAC1CuI,EAAUzI,IAAYyG,EAAiB,cAAC,EAAD,IAAc,KAE3D,OACI,sBAAKvB,UAAU,aAAf,UACKsD,EACAC,EACA9F,EACD,wBACIuC,UAAU,mCACVwD,SAAUjC,EACVvD,MAAO,CAAE,QAAW0D,EAAY,OAAS,SACzCT,QAAS,kBAAMW,EAAUtF,IAJ7B,SAKI,qBAAK0D,UAAU,QAAf,8BCjFDyD,G,MAjBE,WACb,OACI,qCACI,mBAAGzD,UAAU,eAAb,0DACA,sBAAKA,UAAU,WAAf,UACI,sBAAKA,UAAU,yBAAf,UACI,qBAAKA,UAAU,2BACf,qBAAKA,UAAU,4BAEnB,qBAAKA,UAAU,0BACf,qBAAKA,UAAU,0BACf,qBAAKA,UAAU,kCCqCzBL,G,MAAO,SAAC,GAAc,IAAZ5C,EAAW,EAAXA,KACJC,EAAwDD,EAAxDC,KAAM0G,EAAkD3G,EAAlD2G,WAAYxG,EAAsCH,EAAtCG,UAAWG,EAA2BN,EAA3BM,SAAUE,EAAiBR,EAAjBQ,KAAMC,EAAWT,EAAXS,OAEjDqF,EAAW,CAAE,UAAa,SAK9B,MAJkB,wEAAd3F,IACA2F,EAAW,CAAE,UAAa,UAI1B,qCACI,sBAAK7C,UAAU,eAAf,UACI,qBAAKR,IAAKtC,EAAWwC,IAAK1C,EAAMgB,MAAO6E,IACvC,gCACI,qBAAK7C,UAAU,kBAAf,SAAkChD,IAClC,sBAAKgD,UAAU,aAAf,UACI,mBAAGC,KAAM5C,EAAU2C,UAAU,sBAA7B,SACI,qBAAKA,UAAU,QAAf,wBAEJ,mBAAGC,KAAM1C,EAAMyC,UAAU,2BAAzB,SACI,qBAAKA,UAAU,QAAf,6BAKhB,qBAAKA,UAAU,cAAf,SAA8B0D,IAC9B,qBAAK1D,UAAU,eAAf,qBACA,qBAAIA,UAAU,oBAAd,UACKxC,EAAOsC,OAAS,EAAI,KAAO,4BAExBtC,EAAOf,KAAI,SAAC6F,EAAMM,GACd,KAAIA,EAAI,GACR,OACI,oBAAY5C,UAAU,oBAAtB,SACKsC,EAAKtF,MADD4F,cActBe,EAtFE,SAACvC,GAEd,MAAwBvG,mBAAS,MAAjC,mBAAOkC,EAAP,KAAaoD,EAAb,KAEA,EAAqDvF,IAA7CE,EAAR,EAAQA,QAASE,EAAjB,EAAiBA,MAAO2B,EAAxB,EAAwBA,aAAcV,EAAtC,EAAsCA,WAEtCmE,qBAAU,WACNC,MACD,CAACe,EAAMwC,SAEV,IAAMvD,EAAa,WACf,IAAQuD,EAAWxC,EAAXwC,OACHA,IAIL3H,IACAU,EAAaiH,GACR/C,KAAKJ,KAGRA,EAAe,SAAC1D,GAClBoD,EAAQpD,IAGN8G,EAAW9G,GAAQjC,GAAWE,EAAQ,KAAO,cAAC,EAAD,IAC7C8F,EAAe9F,EAAQ,cAAC,EAAD,IAAmB,KAC1C+F,EAASjG,EAAU,cAAC,EAAD,IAAc,KACjCkG,EAAYlG,GAAWE,IAAU+B,EAA+B,KAAvB,cAAC,EAAD,CAAMA,KAAMA,IAC3D,OACI,sBAAKiD,UAAU,aAAf,UACK6D,EACA/C,EACAC,EACAC,M,gCCrBE8C,E,4MAlBXC,MAAQ,CACJ/I,OAAO,G,uDAGX,SAAkBA,EAAOgJ,GACrBC,QAAQC,IAAIlJ,EAAOgJ,GACnBG,KAAKC,SAAS,CACVpJ,OAAO,M,oBAGf,WACI,OAAImJ,KAAKJ,MAAM/I,MACJ,cAAC,EAAD,IAEJmJ,KAAK/C,MAAMiD,a,GAfEC,aCJb,MAA0B,mCCgC1BC,EAvBE,WACb,MAAgC1J,mBAAS,MAAzC,mBAAO2J,EAAP,KAAqBrE,EAArB,KAKA,OACI,qCACI,cAAC,EAAD,UACI,cAAC,EAAD,MAEJ,sBAAKH,UAAU,gBAAf,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUiD,eAVH,SAACrG,GACpBuD,EAAQvD,QAWA,cAAC,EAAD,UACI,cAAC,EAAD,CAAUgH,OAAQY,SAG1B,qBAAKxE,UAAU,gBAAgBR,IAAKkE,EAAYhE,IAAI,eC5BjD,G,MAAA,IAA0B,sCCA1B,MAA0B,0CCiB1B+E,EAbG,WACd,OACI,sBAAKzE,UAAU,cAAf,UACI,qBAAKR,IAAKkF,EAAUhF,IAAI,aACxB,sBAAKM,UAAU,mBAAf,mCAC0B,uBAD1B,iBAIA,qBAAKR,IAAKmF,EAAcjF,IAAI,sBCqEzBkF,G,MAvEI,WAEf,MAAoC/J,mBAAS,IAA7C,mBAAOgK,EAAP,KAAmBC,EAAnB,KACA,EAA4CjK,oBAAS,GAArD,mBAAO0G,EAAP,KAAuBC,EAAvB,KACA,EAA4B3G,mBAAS,KAArC,mBAAOyB,EAAP,KAAemF,EAAf,KACA,EAAsC5G,oBAAS,GAA/C,mBAAOkK,EAAP,KAAoBC,EAApB,KAEA,EAAyCpK,IAAjCE,EAAR,EAAQA,QAASE,EAAjB,EAAiBA,MAAO6B,EAAxB,EAAwBA,aAExBuD,qBAAU,WACNwB,EAAUtF,GAAQ,KACnB,IAEH,IAAMsF,EAAY,SAACtF,EAAQuF,GACbL,GAAVK,GACAhF,EAAaP,GACRuE,KAAKiB,IAGRA,EAAmB,SAACmD,GACtB,IAAIjD,GAAQ,EACRT,EAAezB,OAAS,IACxBkC,GAAQ,GAGZ8C,GAAc,SAAAD,GAAU,4BAAQA,GAAR,YAAuBI,OAC/CzD,GAAkB,SAAAD,GAAc,OAAI,KACpCE,GAAU,SAAAnF,GAAM,OAAIA,EAAS,KAC7B0I,GAAe,SAAAD,GAAW,OAAI/C,MAwB5BsB,EAAetI,EAAQ,cAAC,EAAD,IAAmB,KAC1CuI,EAAUzI,IAAYyG,EAAiB,cAAC,EAAD,IAAc,KACrDP,EAvBc,SAAC2B,GACjBsB,QAAQC,IAAIvB,GACZ,IAAMlF,EAAQkF,EAAIlG,KAAI,SAAC6F,EAAMM,GACzB,OACI,oBAAI5C,UAAU,eACV8C,SAAU,EADd,SAEI,oBAAG7C,KAAK,IAAR,UACI,qBAAKT,IAAK8C,EAAKpF,UAAWwC,IAAK4C,EAAKtF,KAAMgD,UAAU,qBACpD,qBAAKA,UAAU,oBAAf,SAAoCsC,EAAKtF,OACzC,qBAAKgD,UAAU,qBAAf,SAAqCsC,EAAK1E,gBAK1D,OACI,oBAAIoC,UAAU,eAAd,SACKvC,IAOG4F,CAAYwB,GAC5B,OACI,sBAAK7E,UAAU,eAAf,UACKsD,EACAC,EACAvC,EACD,wBACIC,QAAS,kBAAMW,EAAUtF,IACzBkH,SAAUjC,EACVvD,MAAO,CAAE,QAAW+G,EAAc,OAAS,SAC3C/E,UAAU,mCAJd,SAKI,qBAAKA,UAAU,QAAf,8BC/DDkF,EATI,WACf,OACI,qCACI,cAAC,EAAD,IACA,cAAC,EAAD,QCgBGC,G,MAnBG,WACd,OACI,yBAAQnF,UAAU,cAAlB,UACI,oBAAIA,UAAU,aAAd,SACI,eAAC,IAAD,CAAMoF,GAAG,IAAT,UACI,0CADJ,2BAIJ,qBAAKpF,UAAU,YAAf,SACI,+BACI,6BAAI,cAAC,IAAD,CAASqF,OAAK,EAACC,YAAa,CAAE,MAAS,WAAaF,GAAG,IAAvD,0BADR,IAGI,6BAAI,cAAC,IAAD,CAASC,OAAK,EAACC,YAAa,CAAE,MAAS,WAAaF,GAAG,UAAvD,gCCUTG,EAtBH,WACR,OACI,cAAC,IAAD,UACI,sBAAKvF,UAAU,MAAf,UAEI,cAAC,EAAD,IAEA,+BACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOqF,OAAK,EAAClI,KAAK,UAAlB,SACI,cAACqI,EAAD,MAEJ,cAAC,IAAD,CAAOH,OAAK,EAAClI,KAAK,IAAlB,SACI,cAAC,EAAD,iB,MCX5BsI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.68242856.chunk.js","sourcesContent":["import { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n\r\n    const { loading, request, error, clearError } = useHttp();\r\n\r\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    const _apiKey = 'apikey=610be77b9031886bf6bf198e6ae6e9b7';\r\n    const _baseOffset = 210;\r\n\r\n\r\n\r\n    const getAllCharacters = async (offset = _baseOffset) => {\r\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformCharacter)\r\n    }\r\n    const getCharacter = async (id) => {\r\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n        return _transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    const getAllComics = async (offset = 0) => {\r\n        const res = await request(`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformComics)\r\n    }\r\n\r\n    const _transformCharacter = (char) => {\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description,\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n    const _transformComics = (comics) => {\r\n        return {\r\n            id: comics.id,\r\n            name: comics.title,\r\n            description: comics.description || 'There is no description',\r\n            thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n            pageCount: comics.pageCount ? `${comics.pageCount} p.` : 'No information about the number of pages',\r\n            price: comics.prices.price ? `${comics.prices.price}$` : 'not available'\r\n        }\r\n    }\r\n    return { loading, error, clearError, getAllCharacters, getCharacter, getAllComics }\r\n}\r\n\r\nexport default useMarvelService;\r\n","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null,\r\n        headers = { 'Content-Type': 'application/json' }) => {\r\n\r\n        setLoading(true);\r\n\r\n        try {\r\n            const response = await fetch(url, { method, body, headers });\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`Could not fetch ${url}, status ${response.status}`);\r\n            }\r\n\r\n            const data = response.json();\r\n\r\n            setLoading(false);\r\n            return data;\r\n        } catch (e) {\r\n            setLoading(false);\r\n            setError(e.message);\r\n            throw e;\r\n        }\r\n\r\n    }, [])\r\n\r\n    const clearError = useCallback(() => setError(null), [])\r\n\r\n    return { loading, request, error, clearError }\r\n}","const Spinner = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{ margin: '0 auto', background: 'none', display: 'block' }} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n            <g transform=\"translate(80,50)\">\r\n                <g transform=\"rotate(0)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\r\n                <g transform=\"rotate(45)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g><g transform=\"translate(50,80)\">\r\n                <g transform=\"rotate(90)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\r\n                <g transform=\"rotate(135)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g><g transform=\"translate(20,50.00000000000001)\">\r\n                <g transform=\"rotate(180)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\r\n                <g transform=\"rotate(225)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g><g transform=\"translate(49.99999999999999,20)\">\r\n                <g transform=\"rotate(270)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\r\n                <g transform=\"rotate(315)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif'\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img style={{\r\n            display: 'block',\r\n            width: '250px',\r\n            heigth: '250px',\r\n            objectFit: 'contain',\r\n            margin: '0 auto'\r\n        }}\r\n            src={img} alt='error' />\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { useState, useEffect } from 'react';\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nconst RandomChar = () => {\n\n    const [char, setChar] = useState(null);\n    const { loading, error, getCharacter, clearError } = useMarvelService();\n\n    useEffect(() => {\n        updateChar();\n        const timerId = setInterval(updateChar, 600000);\n\n        return () => {\n            clearInterval(timerId)\n        }\n    }, [])\n\n    const onCharLoaded = (char) => {\n        setChar(char);\n    }\n\n    const updateChar = () => {\n        clearError();\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n        getCharacter(id)\n            .then(onCharLoaded);\n    }\n\n    const errorMassage = error ? <ErrorMessage /> : null;\n    const spiner = loading ? <Spinner /> : null\n    const content = !(loading || error || !char) ? <View char={char} /> : null\n\n    return (\n        <div className=\"randomchar\" >\n            {errorMassage}\n            {spiner}\n            {content}\n            <div className=\"randomchar__static\">\n                <p className=\"randomchar__title\">\n                    Random character for today!<br />\n                    Do you want to get to know him better?\n                </p>\n                <p className=\"randomchar__title\">\n                    Or choose another one\n                </p>\n                <button onClick={updateChar} className=\"button button__main\">\n                    <div className=\"inner\">try it</div>\n                </button>\n                <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\" />\n            </div>\n        </div>\n    )\n\n}\n\nconst View = ({ char }) => {\n    const { name, thumbnail, homepage, wiki } = char;\n    let { description } = char;\n    let clazzImg = thumbnail.includes(\"image_not_available\") ? \"randomchar__img randomchar__img__undefined\" : \"randomchar__img\";\n    if (!description) {\n        description = \"Character information missing!\"\n    }\n    if (description.length > 21) {\n        description = description.slice(0, 60) + `...`\n    }\n    return (\n        <div className=\"randomchar__block\">\n            <img src={thumbnail} alt=\"Random character\" className={clazzImg} />\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">{description}</p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RandomChar;","import { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport useMarvelService from '../../services/MarvelService';\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport './charList.scss';\n\nconst CharList = (props) => {\n\n    const [charList, setCharList] = useState([]);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(210);\n    const [charEnded, setCharEnded] = useState(false);\n\n    const { loading, error, getAllCharacters } = useMarvelService();\n\n    useEffect(() => {\n        onRequest(offset, true);\n    }, [])\n\n    const onRequest = (offset, initial) => {\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\n        getAllCharacters(offset)\n            .then(onCharListLoaded)\n    }\n\n    const onCharListLoaded = (newCharList) => {\n        let ended = false;\n        if (newCharList.length < 9) {\n            ended = true;\n        }\n\n        setCharList(charList => [...charList, ...newCharList]);\n        setNewItemLoading(newItemLoading => false);\n        setOffset(offset => offset + 9);\n        setCharEnded(charEnded => ended);\n    }\n\n    const itemRefs = useRef([]);\n\n    const focusOnItem = (id) => {\n        itemRefs.current.forEach(item => item.classList.remove('char__item_selected'));\n        itemRefs.current[id].classList.add('char__item_selected');\n        itemRefs.current[id].focus();\n    }\n\n    // Этот метод создан для оптимизации, \n    // чтобы не помещать такую конструкцию в метод render\n    function renderItems(arr) {\n        const items = arr.map((item, i) => {\n            let imgStyle = { 'objectFit': 'cover' };\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = { 'objectFit': 'unset' };\n            }\n\n            return (\n                <li\n                    className=\"char__item\"\n                    tabIndex={0}\n                    ref={el => itemRefs.current[i] = el}\n                    key={item.id}\n                    onClick={() => {\n                        props.onCharSelected(item.id);\n                        focusOnItem(i);\n                    }}\n                    onKeyPress={(e) => {\n                        if (e.key === ' ' || e.key === \"Enter\") {\n                            props.onCharSelected(item.id);\n                            focusOnItem(i);\n                        }\n                    }}>\n                    <img src={item.thumbnail} alt={item.name} style={imgStyle} />\n                    <div className=\"char__name\">{item.name}</div>\n                </li>\n            )\n        });\n        // А эта конструкция вынесена для центровки спиннера/ошибки\n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    const items = renderItems(charList);\n\n    const errorMessage = error ? <ErrorMessage /> : null;\n    const spinner = loading && !newItemLoading ? <Spinner /> : null;\n\n    return (\n        <div className=\"char__list\">\n            {errorMessage}\n            {spinner}\n            {items}\n            <button\n                className=\"button button__main button__long\"\n                disabled={newItemLoading}\n                style={{ 'display': charEnded ? 'none' : 'block' }}\n                onClick={() => onRequest(offset)}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nCharList.propTypes = {\n    onCharSelected: PropTypes.func.isRequired\n}\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { useState, useEffect } from 'react';\nimport propTypes from 'prop-types';\n\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton';\n\nimport './charInfo.scss';\n\nconst CharInfo = (props) => {\n\n    const [char, setChar] = useState(null);\n\n    const { loading, error, getCharacter, clearError } = useMarvelService();\n\n    useEffect(() => {\n        updateChar()\n    }, [props.charId])\n\n    const updateChar = () => {\n        const { charId } = props;\n        if (!charId) {\n            return\n        }\n\n        clearError();\n        getCharacter(charId)\n            .then(onCharLoaded)\n    }\n\n    const onCharLoaded = (char) => {\n        setChar(char);\n    }\n\n    const skeleton = char || loading || error ? null : <Skeleton />\n    const errorMassage = error ? <ErrorMessage /> : null;\n    const spiner = loading ? <Spinner /> : null\n    const content = !(loading || error || !char) ? <View char={char} /> : null\n    return (\n        <div className=\"char__info\">\n            {skeleton}\n            {errorMassage}\n            {spiner}\n            {content}\n        </div>\n    )\n\n}\n\nconst View = ({ char }) => {\n    const { name, decoration, thumbnail, homepage, wiki, comics } = char;\n\n    let imgStyle = { 'objectFit': 'cover' };\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = { 'objectFit': 'unset' };\n    }\n\n    return (\n        <>\n            <div className=\"char__basics\">\n                <img src={thumbnail} alt={name} style={imgStyle} />\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">{decoration}</div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {comics.length > 0 ? null : 'Comic information missing'}\n                {\n                    comics.map((item, i) => {\n                        if (i > 9) return;\n                        return (\n                            <li key={i} className=\"char__comics-item\">\n                                {item.name}\n                            </li>\n                        )\n                    })\n                }\n            </ul>\n        </>\n    )\n}\nCharInfo.propTypes = {\n    charId: propTypes.number\n}\n\nexport default CharInfo;","import { Component } from \"react\";\r\n\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        console.log(error, errorInfo);\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n    render() {\r\n        if (this.state.error) {\r\n            return <ErrorMessage />\r\n        }\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { useState } from \"react\";\r\n\r\nimport RandomChar from \"../randomChar/RandomChar\";\r\nimport CharList from \"../charList/CharList\";\r\nimport CharInfo from \"../charInfo/CharInfo\";\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\n\r\nimport decoration from '../../resources/img/vision.png';\r\n\r\nconst MainPage = () => {\r\n    const [selectedChar, setChar] = useState(null);\r\n\r\n    const onCharSelected = (id) => {\r\n        setChar(id);\r\n    }\r\n    return (\r\n        <>\r\n            <ErrorBoundary>\r\n                <RandomChar />\r\n            </ErrorBoundary>\r\n            <div className=\"char__content\">\r\n                <ErrorBoundary>\r\n                    <CharList onCharSelected={onCharSelected} />\r\n                </ErrorBoundary>\r\n                <ErrorBoundary>\r\n                    <CharInfo charId={selectedChar} />\r\n                </ErrorBoundary>\r\n            </div>\r\n            <img className=\"bg-decoration\" src={decoration} alt=\"vision\" />\r\n        </>\r\n    )\r\n}\r\nexport default MainPage;","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport useMarvelService from '../../services/MarvelService';\n\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport './comicsList.scss';\n\nconst ComicsList = () => {\n\n    const [comicsList, setComicsList] = useState([]);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(100);\n    const [comicsEnded, setComicsEnded] = useState(false);\n\n    const { loading, error, getAllComics } = useMarvelService();\n\n    useEffect(() => {\n        onRequest(offset, true);\n    }, [])\n\n    const onRequest = (offset, initial) => {\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\n        getAllComics(offset)\n            .then(onCharListLoaded)\n    }\n\n    const onCharListLoaded = (newComicsList) => {\n        let ended = false;\n        if (newItemLoading.length < 8) {\n            ended = true;\n        }\n\n        setComicsList(comicsList => [...comicsList, ...newComicsList]);\n        setNewItemLoading(newItemLoading => false);\n        setOffset(offset => offset + 8);\n        setComicsEnded(comicsEnded => ended);\n    }\n\n    const renderItems = (arr) => {\n        console.log(arr);\n        const items = arr.map((item, i) => {\n            return (\n                <li className=\"comics__item\"\n                    tabIndex={0}>\n                    <a href=\"#\">\n                        <img src={item.thumbnail} alt={item.name} className=\"comics__item-img\" />\n                        <div className=\"comics__item-name\">{item.name}</div>\n                        <div className=\"comics__item-price\">{item.price}</div>\n                    </a>\n                </li>\n            )\n        })\n        return (\n            <ul className=\"comics__grid\">\n                {items}\n            </ul>\n        )\n\n    }\n    const errorMessage = error ? <ErrorMessage /> : null;\n    const spinner = loading && !newItemLoading ? <Spinner /> : null;\n    const content = renderItems(comicsList);\n    return (\n        <div className=\"comics__list\">\n            {errorMessage}\n            {spinner}\n            {content}\n            <button\n                onClick={() => onRequest(offset)}\n                disabled={newItemLoading}\n                style={{ 'display': comicsEnded ? 'none' : 'block' }}\n                className=\"button button__main button__long\">\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;","import AppBanner from \"../appBanner/AppBanner\";\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\n\r\nconst ComicsPage = () => {\r\n    return (\r\n        <>\r\n            <AppBanner />\r\n            <ComicsList />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ComicsPage;","import { Link, NavLink } from 'react-router-dom';\n\nimport './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <Link to=\"/\">\n                    <span>Marvel</span> information portal\n                </Link>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><NavLink exact activeStyle={{ 'color': '#9f0013' }} to=\"/\">Characters</NavLink></li>\n                    /\n                    <li><NavLink exact activeStyle={{ 'color': '#9f0013' }} to=\"/comics\">Comics</NavLink></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { MainPage, Comics } from \"../pages\"\nimport AppHeader from \"../appHeader/AppHeader\";\n\nconst App = () => {\n    return (\n        <Router>\n            <div className=\"app\" >\n\n                <AppHeader />\n\n                <main>\n                    <Switch>\n                        <Route exact path=\"/comics\">\n                            <Comics />\n                        </Route>\n                        <Route exact path=\"/\">\n                            <MainPage />\n                        </Route>\n                    </Switch>\n                </main>\n            </div >\n        </Router>\n    )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\n\nimport './style/style.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}